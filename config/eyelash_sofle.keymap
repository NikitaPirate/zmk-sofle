#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    macros {
        flash_macro: flash_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bootloader>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
        };

        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <100>;
        };

        td_caps: tap_dance_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };
    };

    combos {
        compatible = "zmk,combos";

        change_layout_1 {
            bindings = <&kp LC(SPACE)>;
            key-positions = <53 54>;
        };

        togaming {
            bindings = <&tog 3>;
            key-positions = <30 29 28 27 57>;
        };

        toggle_layer1_1 {
            bindings = <&tog 1>;
            key-positions = <64 59 60>;
        };

        toggle_layer1_2 {
            bindings = <&tog 1>;
            key-positions = <66 67 63 62>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&mt LC(LG(Q)) ESC  &kp N1           &kp N2              &kp N3                  &kp N4            &kp N5       &kp UP_ARROW     &kp N6     &kp N7            &kp N8          &kp N9                     &kp N0                   &kp BACKSPACE
&kp GRAVE          &kp Q            &kp W               &kp E                   &kp R             &kp T        &kp DOWN_ARROW   &kp Y      &kp U             &kp I           &kp O                      &kp P                    &kp BACKSLASH
&kp TAB            &hm LCTRL A      &hm LEFT_ALT S      &hm LEFT_GUI D          &hm LEFT_SHIFT F  &kp G        &kp LEFT_ARROW   &kp H      &hm LEFT_SHIFT J  &hm LEFT_GUI K  &hm LEFT_ALT L             &hm LCTRL SEMI           &kp APOS
&td_caps           &kp Z            &kp X               &kp C                   &kp V             &kp B        &kp RIGHT_ARROW  &kp N      &kp M             &kp COMMA       &kp DOT                    &kp FSLH                 &kp RIGHT_SHIFT
&kp C_MUTE         &mt LCTRL MINUS  &mt LEFT_ALT EQUAL  &mt LEFT_GUI BACKSPACE  &lt 1 ENTER       &kp SPACE    &kp ENTER        &kp SPACE  &lt 1 ENTER       &kp BACKSPACE   &mt LEFT_ALT LEFT_BRACKET  &mt LCTRL RIGHT_BRACKET
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6       &kp F7     &kp F8     &kp F9     &kp F10        &kp DEL
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp KP_LPAR  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_DIVIDE  &kp KP_MULTIPLY
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp KP_RPAR  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_MINUS   &kp KP_PLUS
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &kp KP_N0    &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT     &kp KP_EQUAL
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans       &trans     &trans     &trans     &trans
            >;

            display-name = "LAYER1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            display-name = "LAYER2";
            sensor-bindings = <&scroll_encoder>;
        };

        gaming {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4     &kp N5       &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB    &kp Q   &kp W   &kp E     &kp R      &kp T        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB    &kp A   &kp S   &kp D     &kp F      &kp G        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V      &kp B        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &kp LALT  &kp LCTRL  &kp SPACE    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "GAMING";
        };
    };
};
